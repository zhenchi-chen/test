//
//  AddViewController.m
//  GOSPEL
//
//  Created by 陈镇池 on 16/6/23.
//  Copyright © 2016年 lehu. All rights reserved.
//

#import "AddViewController.h"
#import "AddBluetoothViewController.h"
#import "LoginController.h"
#import "QRCodeReaderViewController.h"
#import "QRCodeReader.h"
#import "DetailViewController.h"
#import <SystemConfiguration/CaptiveNetwork.h>
#import "SwitchingDeviceController.h"
#import "AboutViewController.h"


@interface AddViewController ()<QRCodeReaderDelegate,UIAlertViewDelegate>
{
    NSString *smId; //被分享的设备ID
    
    UIScrollView * dropDownSCView; //下拉
}
//标记,从哪个页面进来
@property(nonatomic,assign)NSInteger myTag;

@end

@implementation AddViewController

#pragma 网络数据返回
-(void)httpBaseRequestUtilDelegate:(NSData *)data api:(NSString *)api reqDic:(NSMutableDictionary *)reqDic reqHeadDic:(NSMutableDictionary *)reqHeadDic rspHeadDic:(NSMutableDictionary *)rspHeadDic{
    if ([api isEqualToString:@"分享"]) {
        
        NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:nil];
        NSLog(@"分享dic = %@",dic);
        BaseDataModel *baseModel = [BaseDataModel objectWithKeyValues:dic];
        
        if (baseModel.code == 200) {
            [self initListData];
        }
    } else if ([api isEqualToString:@"设备列表"]) {
        if (data != nil) {
            
            NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:nil];
            NSLog(@"dic = %@",dic);
            BaseDataModel *baseModel = [BaseDataModel objectWithKeyValues:dic];
            NSDictionary *dataDic = (NSDictionary *)baseModel.data;
            if (baseModel.code == 200) {
                if (baseModel.data != nil) {
                    NSArray *tempArr = [dataDic objectForKey:@"Items"];
                    //添加新设备
                    [[UpdateDeviceData sharedManager]addDeviceData:tempArr andDeviceId:smId];
                    
                    if (_myTag == 3) {
                        [GWNotification pushHandle:nil withName:@"更换首页"];
                        //返回到第一个页面
                        [self.navigationController popToRootViewControllerAnimated:YES];
                    }else {
                        
                        kAppDelegate.window.rootViewController = kAppDelegate.nc1;
                        //返回到第一个页面
                        [kAppDelegate.nc2 popToRootViewControllerAnimated:YES];
                    }
                   

                } else {
                    [SVProgressHUD showErrorWithStatus:NSLocalizedString(@"detail_fragment_chart_no_data", nil)];
                }
            }else {
                //设置第一个为首页
                NSMutableDictionary *savedic = [NSMutableDictionary dictionary];
                [savedic setValue:[NSString stringWithFormat:@"%d",0] forKey:@"isDevice"];
                [[ListTheCacheClass sharedManager]saveData:savedic];
                [[UpdateDeviceData sharedManager]setUpdateDataDevice:nil];
                
                kAppDelegate.window.rootViewController = kAppDelegate.nc1;
                //返回到第一个页面
                [kAppDelegate.nc2 popToRootViewControllerAnimated:YES];
            }
        } else {
            [SVProgressHUD showErrorWithStatus:NSLocalizedString(@"net_wrong_prompt", nil)];
        }
    } else {
        [SVProgressHUD showErrorWithStatus:NSLocalizedString(@"net_wrong_prompt",nil)];
    }
    
    
    
    
}


#pragma mark 请求数据
- (void)initListData
{
    
    HttpBaseRequestUtil *req = [[HttpBaseRequestUtil alloc] init];
    req.myDelegate = self;
    NSMutableDictionary *reqDic = [NSMutableDictionary dictionary];
    [reqDic setValue:@"设备列表" forKey:@"api"];
    [reqDic setValue:[de valueForKey:@"username"] forKey:@"username"];
    [reqDic setValue:[de valueForKey:@"token"] forKey:@"token"];
    [req reqDataWithUrl:DEVICE_LIST reqDic:reqDic reqHeadDic:nil];
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor = MainColorWhite;
    [self navSet:@"欢迎使用智能枕头"];
//    self.navigationController.navigationBar.tintColor =[UIColor whiteColor];
    
    _myTag = [[de valueForKey:@"bind_myTag"] integerValue];
    
    
    //导航右边按钮
    UIButton *rightBt = [UIButton buttonWithType:UIButtonTypeCustom];
    rightBt.frame = CGRectMake(0, 30, NavSize, NavSize);
//    rightBt.frame = CGRectMake(MainScreenWidth -90, 30, 80, 30);
//    [rightBt setTitle:@"切换用户" forState:UIControlStateNormal];
    [rightBt setImage:[UIImage imageNamed:@"list"] forState:UIControlStateNormal];
    [rightBt addTarget:self action:@selector(navigationListButtons:) forControlEvents:UIControlEventTouchUpInside];
    
    //导航左边按钮
    UIButton *leftBt = [UIButton buttonWithType:UIButtonTypeCustom];
    leftBt.frame = CGRectMake(0, 30, NavSize, NavSize);
    [leftBt setImage:[UIImage imageNamed:@"about"] forState:UIControlStateNormal];
    [leftBt addTarget:self action:@selector(navigationAboutButtons:) forControlEvents:UIControlEventTouchUpInside];
    if (_myTag != 3) {
//        self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithCustomView:rightBt];
        self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]initWithCustomView:leftBt];
    }
  
    
    //可滑动
    [self layoutScrollView];
    
    //布局View
    [self layoutView];
}

#pragma -mark ScrollView的布局和相关属性
-(void)layoutScrollView
{
    
    dropDownSCView = [[UIScrollView alloc]initWithFrame:CGRectMake(0,0,MainScreenWidth,MainScreenHeight)];
//    dropDownSCView.backgroundColor = RGB(243, 244, 246);
    dropDownSCView.contentSize=CGSizeMake(0, MainScreenHeight-64);
    [self.view addSubview:dropDownSCView];
    

    
    
    
}

#pragma mark 关于
- (void)navigationAboutButtons:(UIButton *)button
{
    self.navigationController.navigationBar.tintColor =[UIColor whiteColor];
    [self.navigationController pushViewController:[[AboutViewController alloc] init] animated:YES];
}
#pragma mark 设备列表
- (void)navigationListButtons:(UIButton *)button{
    
//    SwitchingDeviceController *listVC = [SwitchingDeviceController alloc];
//    listVC.myTag = 3;
//    self.navigationController.navigationBar.tintColor =[UIColor whiteColor];
//    [self.navigationController pushViewController:listVC animated:YES];
    //切换到登陆
    LoginController *loginVC = [[LoginController alloc]init];
    kAppDelegate.window.rootViewController = loginVC;
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)layoutView {
    CGFloat titleLbHeight;
    if (_myTag !=3) {
        UILabel *titleLb = [[UILabel alloc]initWithFrame:CGRectMake(0, 30*Height, MainScreenWidth, 20)];
        titleLb.text = @"您还没有添加设备";
        titleLb.textAlignment = NSTextAlignmentCenter;
        titleLb.font = [UIFont systemFontOfSize:12];
        [dropDownSCView addSubview:titleLb];
        titleLbHeight = height_y(titleLb);
    }else {
        titleLbHeight = 30*Height;
    }
    

    
    
    UILabel *titleLb2 = [[UILabel alloc]initWithFrame:CGRectMake(0, titleLbHeight+50*Height, MainScreenWidth, 20)];
    titleLb2.text = @"我有智能枕头";
    titleLb2.font = [UIFont systemFontOfSize:14];
    titleLb2.textAlignment = NSTextAlignmentCenter;
    titleLb2.textColor = MainColorLightGrey;
    [dropDownSCView addSubview:titleLb2];
    
    UIView *line1 = [[UILabel alloc]initWithFrame:CGRectMake(40*Width, height_y(titleLb2), MainScreenWidth-80*Width, 1)];
    line1.backgroundColor = RGB(240, 240, 240);
    [dropDownSCView addSubview:line1];
    
    //添加设备
    UIButton *lyBt = [self buildBtn:@"添加设备" action:@selector(lyBtAction) frame:CGRectMake(80*Width, height_y(line1)+40*Height, MainScreenWidth-160*Width,50*Height)];
    [dropDownSCView addSubview:lyBt];

    UILabel *titleLb1 = [[UILabel alloc]initWithFrame:CGRectMake(0,  height_y(lyBt)+60*Height, MainScreenWidth, 20)];
    titleLb1.text = @"我想查看亲友的数据";
    titleLb1.textAlignment = NSTextAlignmentCenter;
    titleLb1.textColor = MainColorLightGrey;
    titleLb1.font = [UIFont systemFontOfSize:14];
    [dropDownSCView addSubview:titleLb1];
    
    UIView *line2 = [[UILabel alloc]initWithFrame:CGRectMake(40*Width, height_y(titleLb1), MainScreenWidth-80*Width, 1)];
    line2.backgroundColor = RGB(240, 240, 240);
    [dropDownSCView addSubview:line2];
    
    //添加设备
    UIButton *ewmBt = [self buildBtn:@"扫码关注设备" action:@selector(ewmBtAction) frame:CGRectMake(80*Width, height_y(line2)+40*Height, MainScreenWidth-160*Width,50*Height)];
    [dropDownSCView addSubview:ewmBt];

    UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
    btn.frame = CGRectMake((MainScreenWidth-130)/2, height_y(ewmBt)+20*Height, 130, 30);
    [btn setTitleColor:MainColorLightGrey forState:UIControlStateNormal];
    [btn setTitle:@"需要帮助?" forState:UIControlStateNormal];
    [btn.titleLabel setFont:[UIFont systemFontOfSize:14]];
    [btn addTarget:self action:@selector(navigationAboutButtons:) forControlEvents:UIControlEventTouchUpInside];
//    [dropDownSCView addSubview:btn];
    
    dropDownSCView.contentSize=CGSizeMake(0, height_y(btn)+100*Height);

    
}

//扫描二维码
- (void)ewmBtAction {
    
    if ([QRCodeReader supportsMetadataObjectTypes:@[AVMetadataObjectTypeQRCode]]) {
        static QRCodeReaderViewController *reader = nil;
        static dispatch_once_t onceToken;
        
        dispatch_once(&onceToken, ^{
            reader = [QRCodeReaderViewController new];
        });
        reader.delegate = self;
        
        [reader setCompletionWithBlock:^(NSString *resultAsString) {
            NSLog(@"Completion with result: %@", resultAsString);
        }];
        
        [self presentViewController:reader animated:YES completion:NULL];
    }
    else {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Error" message:@"当前的设备不支持此功能" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
        
        [alert show];
    }

}

#pragma mark - QRCodeReader Delegate Methods

- (void)reader:(QRCodeReaderViewController *)reader didScanResult:(NSString *)result
{
    [self dismissViewControllerAnimated:YES completion:^{
        NSLog(@"设备ID:%@",result);
        /**
         *  格式
         IMEI:86610402622272200000;
         DATE:2017-05-30;TYPE:GPRS;
         SIM:14766160532;
         ICCID:898600D69915C0155578
         */
        if ([result hasPrefix:@"VBLE:"]) {
            NSString *tempStr = [result substringWithRange:NSMakeRange(5,12)];
            NSLog(@"%@",tempStr);
            smId = tempStr;
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:NSLocalizedString(@"can_you_concern_device_fragment_content",nil) message:tempStr delegate:self cancelButtonTitle:@"NO" otherButtonTitles:@"YES", nil];
            [alert show];
            
        }else {
            [SVProgressHUD showErrorWithStatus:NSLocalizedString(@"qr_useless_content",nil)];
        }
        
        
    }];
}

//协议方法
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    //    NSLog(@"_timeInterval = %d",_timeInterval);
    if (buttonIndex == 0) {
        NSLog(@"NO");
        
        
    }else if (buttonIndex == 1) {
        NSLog(@"YES");
        NSLog(@"deviceID = %@",smId);
        
        NSString *devices = [NSString stringWithFormat:@"[{\"deviceID\":\"%@\",\"rule\":\"%@\"}]",smId,@"read"];
        NSLog(@"devices = %@",devices);
        //        NSData *data = [devices dataUsingEncoding:NSUTF8StringEncoding];
        //        NSJSONSerialization *json  =[NSJSONSerialization objectWithJSONData:data];
        //调此接口前要先上传设备配置信息
        HttpBaseRequestUtil *req = [[HttpBaseRequestUtil alloc] init];
        req.myDelegate = self;
        NSMutableDictionary *reqDic = [NSMutableDictionary dictionary];
        [reqDic setValue:@"分享" forKey:@"api"];
        [reqDic setValue:[de valueForKey:@"username"] forKey:@"username"];
        [reqDic setValue:[de valueForKey:@"token"] forKey:@"token"];
        [reqDic setValue:devices forKey:@"devices"];
        [req reqDataWithUrl:Share reqDic:reqDic reqHeadDic:nil];

    }
    
}

- (void)readerDidCancel:(QRCodeReaderViewController *)reader
{
    [self dismissViewControllerAnimated:YES completion:NULL];
}




- (void)lyBtAction {

    AddBluetoothViewController *addBluetoothVC = [[AddBluetoothViewController alloc]init];
    addBluetoothVC.myTag = _myTag;
    [self.navigationController pushViewController:addBluetoothVC animated:YES];
}



//获取WiFi 信息，返回的字典中包含了WiFi的名称、路由器的Mac地址、还有一个Data(转换成字符串打印出来是wifi名称)
- (NSDictionary *)fetchSSIDInfo{
    
    NSArray *ifs = (__bridge_transfer NSArray *)CNCopySupportedInterfaces();
    if (!ifs) {
        return nil;
    }
    NSDictionary *info = nil;
    for (NSString *ifnam in ifs) {
        info = (__bridge_transfer NSDictionary *)CNCopyCurrentNetworkInfo((__bridge CFStringRef)ifnam);
        if (info && [info count]) { break; }
    }
    return info;
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*m
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
